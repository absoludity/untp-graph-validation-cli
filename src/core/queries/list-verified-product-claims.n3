@prefix dcc: <https://test.uncefact.org/vocabulary/untp/dcc/0/> .
@prefix dpp: <https://test.uncefact.org/vocabulary/untp/dpp/0/> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix result: <http://example.org/result#> .
@prefix schemaorg: <https://schema.org/> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix untp: <https://test.uncefact.org/vocabulary/untp/core/0/> .
@prefix vc: <https://www.w3.org/2018/credentials#> .

# This query verifies if claims in DPPs are backed by attestations in DCCs
{
   # Find product passport claims
   ?dppCredential a dpp:DigitalProductPassport .
   ?dppCredential vc:credentialSubject ?dppSubject .
   ?dppSubject untp:product ?product .
   ?product schemaorg:name ?productName .
   ?dppSubject untp:conformityClaim ?claim .
   ?claim untp:conformityTopic ?topic .
   ?claim untp:conformance ?conformance .


   # Find matching conformity credential
   ?dccCredential rdf:type dcc:DigitalConformityCredential .
   ?dccCredential vc:issuer ?dccIssuer .
   ?dccIssuer schemaorg:name ?dccIssuerName .
   ?dccCredential vc:credentialSubject ?dccSubject .
   ?dccSubject dcc:assessment ?assessment .
   ?assessment dcc:assessedProduct ?assessedProduct .
   ?assessedProduct untp:Product ?assessedProductId .
   ?assessment untp:conformityTopic ?assessedTopic .
   ?assessment untp:conformance ?dccConformance .

   # Only match when the assessed product Id is for the same product as the
   # claim AND
   # the assessed topic is the same topic as the claim AND
   # the assessed conformance is true.
   ?assessedProductId log:equalTo ?product .
   ?assessedTopic log:equalTo ?topic .
   ?dccConformance log:equalTo true .

  # Format the output for human readability
   ( "The product \"" ?productName "\" (" ?product ") has a claim (topic: " ?topic ") that was attested to by " ?dccIssuerName ".\n" ) string:concatenation ?criteriaOutput .
}
=> 
{
   # Output as a string for CLI use with --strings
   ?productName log:outputString ?criteriaOutput .

   # Output as RDF triples for programmatic use
   ?product result:hasVerifiedClaim ?claim .
   ?claim result:topic ?topic .
   ?claim result:verifiedBy ?dccIssuer .
   ?dccIssuer result:name ?dccIssuerName .
} .
